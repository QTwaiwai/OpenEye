// Generated by view binder compiler. Do not edit!
package com.example.module_video.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.module_video.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOthersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardVideo;

  @NonNull
  public final ImageView itemIvCover;

  @NonNull
  public final TextView itemTvTime;

  @NonNull
  public final TextView itemTvTitle;

  @NonNull
  public final View view;

  private ItemOthersBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardVideo,
      @NonNull ImageView itemIvCover, @NonNull TextView itemTvTime, @NonNull TextView itemTvTitle,
      @NonNull View view) {
    this.rootView = rootView;
    this.cardVideo = cardVideo;
    this.itemIvCover = itemIvCover;
    this.itemTvTime = itemTvTime;
    this.itemTvTitle = itemTvTitle;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOthersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOthersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_others, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOthersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_video;
      CardView cardVideo = ViewBindings.findChildViewById(rootView, id);
      if (cardVideo == null) {
        break missingId;
      }

      id = R.id.item_iv_cover;
      ImageView itemIvCover = ViewBindings.findChildViewById(rootView, id);
      if (itemIvCover == null) {
        break missingId;
      }

      id = R.id.item_tv_time;
      TextView itemTvTime = ViewBindings.findChildViewById(rootView, id);
      if (itemTvTime == null) {
        break missingId;
      }

      id = R.id.item_tv_title;
      TextView itemTvTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTvTitle == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ItemOthersBinding((ConstraintLayout) rootView, cardVideo, itemIvCover, itemTvTime,
          itemTvTitle, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
